services:
  app:
    container_name: dyppis_laravel
    build:
      context: ./dyppis_backend
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    ports:
      - "9000:9000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
    depends_on:
      - db
      - elasticsearch
    volumes:
      - ./dyppis_backend/.env:/var/www/html/.env
    healthcheck:
      test: [ "CMD", "php-fpm", "-v" ]
      interval: 30s
      timeout: 10s
      retries: 5

  queue-worker:
    container_name: dyppis_queue
    build:
      context: ./dyppis_backend
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    depends_on:
      - db
    volumes:
      - ./dyppis_backend/.env:/var/www/html/.env
    command: php artisan queue:work

  caddy:
    container_name: dyppis_caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dyppis_backend:/var/www/html
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - docker-network
    depends_on:
      - app

  db:
    container_name: dyppis_postgres
    image: bitnami/postgresql:16.3.0
    platform: linux/amd64
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    networks:
      - docker-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: dyppis_redis
    image: bitnami/redis:7.2
    platform: linux/amd64
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - docker-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: dyppis_elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - docker-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: dyppis_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - docker-network

volumes:
  db-data:
  redis-data:

networks:
  docker-network:
    driver: bridge